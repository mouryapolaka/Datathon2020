import pandas as pd
import plotly.express as px

import dash
import dash_core_components as dcc
import dash_html_components as html

from dash.dependencies import Input, Output

external_stylesheets = ['https://codepen.io/chriddyp/pen/bWLwgP.css']

app = dash.Dash(__name__, external_stylesheets=external_stylesheets)

#skills correlation dataset generated by item-based collaborative filtering technique
skill_corr_df = pd.read_csv('data/corr_matrix.csv', index_col = 'skill_name')

#skills dataset
skills_df = pd.read_csv('data/skills.csv')
skills_array = [{'label':i, 'value':i} for i in list(skills_df['skill_name'])]

app.layout = html.Div([

    html.H1("Skills Recommender Dashboard", style={'text-align': 'center'}),
    dcc.Dropdown(id="select_skill",
                 options=skills_array,
                 multi=False,
                 value="c++",
                 style={'width': "50%"}
                 ),

    html.Div(id='output_container', children=[]),
    html.Br(),

    dcc.Graph(id='skills_recommender_plot', figure={})
])
@app.callback(
    [Output(component_id='output_container', component_property='children'),
     Output(component_id='skills_recommender_plot', component_property='figure')],
    [Input(component_id='select_skill', component_property='value')]
)
def update_skill_bar_graph(selected_option):
    print(selected_option)
    print(type(selected_option))

    container = "Selected skill: {}".format(selected_option)
    
    recommended_skills = skill_corr_df[selected_option]
    recommended_skills = recommended_skills.sort_values(ascending=False)
    recommended_skills.dropna(inplace=True)

    df = pd.DataFrame({'Skill' : [], 'Correlation' : []})
    df['Skill'] = [skill for skill in list(recommended_skills.keys())]
    df['Correlation'] = [corr for corr in list(recommended_skills)]

    fig = px.bar(df[1:5], x='Skill', y="Correlation", title=f"Recommended skills for {selected_option}", color='Correlation')

    return container, fig

if __name__ == '__main__':
    app.run_server(debug=True)
